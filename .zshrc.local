# add user functions
fpath=( ~/.zfunctions "${fpath[@]}" )

# Set up the prompt

autoload -Uz promptinit
promptinit
prompt pure

setopt histignorealldups sharehistory
setopt autocd

# Keep 1000 lines of history within the shell and save it to ~/.zsh_history:
HISTSIZE=1000
SAVEHIST=1000
HISTFILE=~/.zsh_history


# Use modern completion system
autoload -Uz compinit
compinit

zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' menu select
#zstyle ':completion:*' menu select=2
eval "$(dircolors -b)"
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
#zstyle ':completion:*' menu select=long
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true

zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi
#alias ll='ls -alF'
#alias ll='ls++ --ptsf -tralF'
alias ll='ls++ --ptsf -al'
alias lt='ls++ --ptsf -tral'
alias ldt='lt -d */'
alias ldl='ll -d */'
#alias ll='ls++ --ptsf -lF'
alias la='ls -A'
alias l='ls -CF'
alias vz='v ~/.zshrc.local'
alias vv='v ~/.vimrc'
alias vi3='v ~/.config/hypr/hyprland.conf'
#alias vi3='v ~/.config/sway/config'
alias sz='source ~/.zshrc'
alias ffun='f() { vim $(grep -lR $1 . | peco) }; f' 
alias vim='echo -ne "\e]50;CursorShape=0;BlinkingCursorEnabled=0\\x7"; vim -c "highlight Comment cterm=italic"' 
#alias v='vim' 
alias vl='v $(ls -t . | head -1)'
alias sv='sudo vim' 
alias pwdc='pwd | tr -d "\n" | wl-copy'
alias pwdec='printf "%q" "$(pwd)" | wl-copy'
alias g='git'
# source ~/.bash_profile
ffind() {
   find . -name "*$1*"
};

#zstyle ':prompt:grml:*:items:percent' '$'
export KEYTIMEOUT=1
#export PATH="/home/oscar/Android/Sdk/platform-tools:$PATH"
#export PATH="/usr/local/cuda-8.0/bin:$PATH"
#export LD_LIBRARY_PATH="/usr/local/cuda-8.0/lib64:$LD_LIBRARY_PATH"
export NDK_ROOT="/home/oscar/Android/Sdk/ndk-bundle"

function zle-keymap-select zle-line-init zle-line-finish {
  case $KEYMAP in
      vicmd)      print -n '\033[1 q';; # block cursor
      viins|main) print -n '\033[5 q';; # line cursor
  esac
}

zle -N zle-line-init
zle -N zle-line-finish
zle -N zle-keymap-select

zle-line-init () {
    zle -K viins
}


bindkey -v
alias rekeys="setxkbmap -layout us -variant altgr-intl -option ctrl:nocaps && xset r rate 200 40 && killall xcape && xcape -t 200 -e 'Control_L=Escape'"
source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source ~/.zshrc.local.extra
# For ls++
PATH="/home/oscar/perl5/bin${PATH:+:${PATH}}"; export PATH;
PERL5LIB="/home/oscar/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
PERL_LOCAL_LIB_ROOT="/home/oscar/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"/home/oscar/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=/home/oscar/perl5"; export PERL_MM_OPT;

source ~/repos_ajenos/z/z.sh

autoload bashcompinit
bashcompinit
#eval "$(register-python-argcomplete wgin)"
#source /etc/bash_completion.d/python-argcomplete.sh

export LD_LIBRARY_PATH="/usr/local/lib/:$LD_LIBRARY_PATH"
export $(dbus-launch)

alias diff="colordiff"
# taken from http://owen.cymru/sf-a-quick-way-to-search-for-some-thing-in-bash-and-edit-it-with-vim-2/
sf() {
  if [ "$#" -lt 1 ]; then echo "Supply string to search for!"; return 1; fi
  search=`printf "%q" "$*"`
  include="yml,js,json,php,md,styl,pug,jade,html,config,py,cpp,h,hpp,c,cl,java,go,hs,rb,conf,fa,lst,txt,mm,m,swift,txt,gradle,tex,sh,Makefile,cc,kt"
  exclude=".d,.o,.config,.git,node_modules,vendor,build,yarn.lock,*.sty,*.bst,*.coffee,dist,pdf"
  rg_command='rg --column --line-number --no-heading --fixed-strings --ignore-case --no-ignore --hidden --follow --color "always" -g "*.{'$include'}" -g "!{'$exclude'}/*" --iglob "!{*site-packages*,*3rdparty*}"'
  files=`eval $rg_command $search | fzf --ansi --multi --reverse | awk -F ':' '{print $1":"$2":"$3}'`
  [[ -n "$files" ]] && ${EDITOR:-vim} $files
}
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh


#alias asciicast2gif='docker run --rm -v $PWD:/data asciinema/asciicast2gif'
export SHELL='/usr/bin/zsh'

#shoot() {
    #kill -9 $(xprop _NET_WM_PID | awk '{ print $3 }')
#}

#alias adblock="adb shell input keyevent 26"

alias ipython="ipython --TerminalInteractiveShell.editing_mode=vi"
export PKG_CONFIG_PATH="/usr/local/lib/pkgconfig/" 
export HALIDE_ROOT=/home/ogomez/repos_ajenos/halide10/
export PATH=$PATH:/usr/local/bin
export PATH=$PATH:/home/ogomez/.local/bin
export JAVA_HOME=/opt/android-studio/jre/

#alias pikaurRemoveOrphans="pikaur -Rns $(pikaur -Qtdq | tr '\n' ' ')"
#alias pikaurListBySize="LC_ALL=C pikaur -Qi | awk '/^Name/{name=$3} /^Installed Size/{print $4$5, name}' | sort -h"

alias icat="kitty +kitten icat"
#alias ssh="kitty +kitten ssh"
imshow() { 
   if [ "$#" -eq 0 ]; then
      nohup xnviewmp $PWD &> /dev/null & 
   else
      nohup xnviewmp $1 &> /dev/null & 
   fi
};
fpath=(~/.zsh_functions $fpath);
autoload -U $fpath[1]/*(.:t)
source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
eval "$(atuin init zsh --disable-up-arrow)"

